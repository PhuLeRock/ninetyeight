pipeline {
  environment {
        git98='https://github.com/PhuLeRock/ninetyeight.git'
        ECRCREDENTIALS = "ecr:ap-southeast-1:aws098"
        AWS_ACCOUNT_ID = "your account id"
        AWS_DEFAULT_REGION = "ap-southeast-1"
        IMAGE_REPO_NAME = "pyapp"
        IMAGE_TAG = "latest"
        VERSION = "0.1.0"
        REPOSITORY_URI = "667656621301.dkr.ecr.ap-southeast-1.amazonaws.com"
  }
  agent any
  parameters { string(name: 'Branch', defaultValue: 'main', description: 'Enter branch or tag') }
  stages {
    stage ('Checkout') {
          steps {
                checkout([
                    $class: 'GitSCM', 
                    branches: [[name: params.Branch]],
                    extensions: [], 
                    userRemoteConfigs: [[credentialsId: 'phule98', 
                    url: env.git98]]])
            }
          }

    stage ('Preparation') {
          steps {
                sh 'pwd'
                sh 'ls -la'
                sh 'echo workspace is $WORKSPACE'
                sh 'echo print docker version'
                sh 'docker version'
                sh 'docker ps -a'

            }
      }
    

    stage('Building image') {
      steps {
            script {
                  sh """ docker build -t ${IMAGE_REPO_NAME}:${IMAGE_TAG} ."""
            }
      }
    }

    stage('Tagging...') {
      steps {  
            script {
                  sh """docker tag ${IMAGE_REPO_NAME}:${IMAGE_TAG} ${REPOSITORY_URI}:$IMAGE_TAG"""
                  sh """docker tag ${IMAGE_REPO_NAME}:${IMAGE_TAG} ${REPOSITORY_URI}:${VERSION}.${env.BUILD_NUMBER}"""
            }
      }
    } 
    stage('Logging into AWS ECR and push') {
      steps {
            script {
              docker.withRegistry(${REPOSITORY_URI}, ${ECRCREDENTIALS}) {     
              dockerImage.push("${VERSION}.${env.BUILD_NUMBER}")
              dockerImage.push('latest')    
              }  
            }
      }             
    }
  }

}